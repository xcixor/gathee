version: 2.1

references:
  deployment_steps: &deployment_steps
    working_directory: ~/gathee
    docker:
      - image: circleci/python:3.6-jessie-browsers
    steps:
      - checkout
      - run:
          name: Deploy Application
          command: |
            bash .circleci/deploy.sh create_infrastructure

jobs:
  test:
    working_directory: ~/gathee
    docker:
      - image: circleci/python:3.7-browsers-legacy
      - image: circleci/postgres:9.6.9-alpine
    steps:
      - checkout
      - run:
          name: Set up environment
          command: |
            sudo pip install pipenv==2018.11.26
            pipenv install
      - run:
          name: Run Tests
          command: |
            pipenv install coverage coveralls
            cd src/core
            pipenv run coverage run --source='.' manage.py test
            pipenv run coverage report --rcfile=../../.coveragerc
            pipenv run coverage html --rcfile=../../.coveragerc
            export COVERALLS_REPO_TOKEN=${COVERALLS_REPO_TOKEN}
            pipenv run coveralls --rcfile=../../.coveragerc

  integration_deployment:
    <<: *deployment_steps

  staging_deployment:
    <<: *deployment_steps

  production_deployment:
    <<: *deployment_steps

  destroy_integration:
    working_directory: ~/gathee
    docker:
      - image: circleci/python:3.6-jessie-browsers
    steps:
      - checkout
      - run:
          name: Destroy Application
          command: |
            bash .circleci/deploy.sh destroy_infrastructure

workflows:
  version: 2
  test-application:
    jobs:
      - test
      - integration_deployment:
          requires:
            - test
            - integration_deployment_hold
          filters:
            branches:
              ignore:
                - master
                - develop
      - integration_deployment_hold:
          type: approval
          requires:
           - test
          filters:
            branches:
              ignore:
                - master
                - develop
      - destroy_integration:
          requires:
            - destroy_integration_hold
          filters:
            branches:
              ignore:
                - master
                - develop
      - destroy_integration_hold:
          type: approval
          requires:
           - test
          filters:
            branches:
              ignore:
                - master
                - develop
